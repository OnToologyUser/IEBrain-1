digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "owl:Thing" "base:Entity" ; /*classes style*/
	"base:isRelatedToConcept" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:concretelyExpresses" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasRegion" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:overlaps" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isConstraintFor" -> "base:classifies" [ label = "rdfs:subPropertyOf" ];
	"base:includesEvent" -> "base:isSettingFor" [ label = "rdfs:subPropertyOf" ];
	"base:isRegionFor" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isCoveredBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasConstraint" -> "base:isClassifiedBy" [ label = "rdfs:subPropertyOf" ];
	"base:isSettingFor" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isSatisfiedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isIntroducedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isConceptExpressedBy" -> "base:isExpressedBy" [ label = "rdfs:subPropertyOf" ];
	"base:isParameterFor" -> "base:isRelatedToConcept" [ label = "rdfs:subPropertyOf" ];
	"base:isRealizedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isRoleOf" -> "base:classifies" [ label = "rdfs:subPropertyOf" ];
	"base:hasMember" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:expresses" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:includesAction" -> "base:includesEvent" [ label = "rdfs:subPropertyOf" ];
	"base:isRoleDefinedIn" -> "base:isDefinedIn" [ label = "rdfs:subPropertyOf" ];
	"base:isActionIncludedIn" -> "base:isEventIncludedIn" [ label = "rdfs:subPropertyOf" ];
	"base:hasPostcondition" -> "base:directlyPrecedes" [ label = "rdfs:subPropertyOf" ];
	"base:isConstituentOf" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:actsThrough" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isEventIncludedIn" -> "base:hasSetting" [ label = "rdfs:subPropertyOf" ];
	"base:isConceptualizedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:precedes" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isPreconditionOf" -> "base:directlyPrecedes" [ label = "rdfs:subPropertyOf" ];
	"base:specializes" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isDefinedIn" -> "base:isConceptUsedIn" [ label = "rdfs:subPropertyOf" ];
	"base:nearTo" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasRole" -> "base:isClassifiedBy" [ label = "rdfs:subPropertyOf" ];
	"base:isExpressedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isConcretelyExpressedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:describes" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isQualityOf" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasConstituent" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:sameSettingAs" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:characterizes" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasTask" -> "base:isRelatedToConcept" [ label = "rdfs:subPropertyOf" ];
	"base:directlyPrecedes" -> "base:precedes" [ label = "rdfs:subPropertyOf" ];
	"base:isTaskOf" -> "base:isRelatedToConcept" [ label = "rdfs:subPropertyOf" ];
	"base:isParticipantIn" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isDescribedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:realizesInformationAbout" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isSuperordinatedTo" -> "base:isRelatedToConcept" [ label = "rdfs:subPropertyOf" ];
	"base:isSuperordinatedTo" -> "base:directlyPrecedes" [ label = "rdfs:subPropertyOf" ];
	"base:isRelatedToDescription" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isReferenceOfInformationRealizedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isSpecializedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isUnifiedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isTimeIncludedIn" -> "base:hasSetting" [ label = "rdfs:subPropertyOf" ];
	"base:involvesAgent" -> "base:hasParticipant" [ label = "rdfs:subPropertyOf" ];
	"base:hasSetting" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isPostconditionOf" -> "base:directlyFollows" [ label = "rdfs:subPropertyOf" ];
	"base:includesObject" -> "base:isSettingFor" [ label = "rdfs:subPropertyOf" ];
	"base:expressesConcept" -> "base:expresses" [ label = "rdfs:subPropertyOf" ];
	"base:executesTask" -> "base:isClassifiedBy" [ label = "rdfs:subPropertyOf" ];
	"base:isAgentIncludedIn" -> "base:isObjectIncludedIn" [ label = "rdfs:subPropertyOf" ];
	"base:expands" -> "base:isRelatedToDescription" [ label = "rdfs:subPropertyOf" ];
	"base:includesAgent" -> "base:includesObject" [ label = "rdfs:subPropertyOf" ];
	"base:classifies" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:actsFor" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isObjectIncludedIn" -> "base:hasSetting" [ label = "rdfs:subPropertyOf" ];
	"base:hasPrecondition" -> "base:directlyFollows" [ label = "rdfs:subPropertyOf" ];
	"base:isMemberOf" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasCommonBoundary" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:realizes" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:directlyFollows" -> "base:follows" [ label = "rdfs:subPropertyOf" ];
	"base:isExecutedIn" -> "base:classifies" [ label = "rdfs:subPropertyOf" ];
	"base:follows" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasRegionDataValue" -> "base:hasDataValue" [ label = "rdfs:subPropertyOf" ];
	"base:coparticipatesWith" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isAbout" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasLocation" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isTimeIntervalOf" -> "base:isRegionFor" [ label = "rdfs:subPropertyOf" ];
	"base:isTaskDefinedIn" -> "base:isDefinedIn" [ label = "rdfs:subPropertyOf" ];
	"base:defines" -> "base:usesConcept" [ label = "rdfs:subPropertyOf" ];
	"base:conceptualizes" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasPart" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasParticipant" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasIntervalDate" -> "base:hasRegionDataValue" [ label = "rdfs:subPropertyOf" ];
	"base:covers" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:includesTime" -> "base:isSettingFor" [ label = "rdfs:subPropertyOf" ];
	"base:hasComponent" -> "base:hasPart" [ label = "rdfs:subPropertyOf" ];
	"base:farFrom" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:usesConcept" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isLocationOf" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasEventDate" -> "base:hasDataValue" [ label = "rdfs:subPropertyOf" ];
	"base:hasTimeInterval" -> "base:hasRegion" [ label = "rdfs:subPropertyOf" ];
	"base:introduces" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:satisfies" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:definesRole" -> "base:defines" [ label = "rdfs:subPropertyOf" ];
	"base:isAgentInvolvedIn" -> "base:isParticipantIn" [ label = "rdfs:subPropertyOf" ];
	"base:isCharacterizedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasQuality" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isParametrizedBy" -> "base:isClassifiedBy" [ label = "rdfs:subPropertyOf" ];
	"base:isTimeOfObservationOf" -> "base:isRegionFor" [ label = "rdfs:subPropertyOf" ];
	"base:isConceptUsedIn" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:hasParameter" -> "base:isRelatedToConcept" [ label = "rdfs:subPropertyOf" ];
	"base:hasParameterDataValue" -> "base:hasDataValue" [ label = "rdfs:subPropertyOf" ];
	"base:isPartOf" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:definesTask" -> "base:defines" [ label = "rdfs:subPropertyOf" ];
	"base:isReferenceOf" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isSubordinatedTo" -> "base:isRelatedToConcept" [ label = "rdfs:subPropertyOf" ];
	"base:isSubordinatedTo" -> "base:directlyFollows" [ label = "rdfs:subPropertyOf" ];
	"base:isExpandedIn" -> "base:isRelatedToDescription" [ label = "rdfs:subPropertyOf" ];
	"base:isClassifiedBy" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:parametrizes" -> "base:classifies" [ label = "rdfs:subPropertyOf" ];
	"base:unifies" -> "base:associatedWith" [ label = "rdfs:subPropertyOf" ];
	"base:isObservableAt" -> "base:hasRegion" [ label = "rdfs:subPropertyOf" ];
	"base:isComponentOf" -> "base:isPartOf" [ label = "rdfs:subPropertyOf" ];
	"owl:Thing" -> "base:Entity" [ label = "base:realizesInformationAbout" ];
	"owl:Thing" -> "base:Entity" [ label = "base:isAbout" ];
	"owl:Thing" -> "xsd:dateTime" [ label = "base:hasEventDate" ];
	"owl:Thing" -> "base:Entity" [ label = "base:describes" ];
	"base:Entity" -> "base:Entity" [ label = "base:follows" ];
	"owl:Thing" -> "base:Entity" [ label = "base:hasMember" ];
	"base:Entity" -> "base:Entity" [ label = "base:precedes" ];
	"base:Entity" -> "base:Entity" [ label = "base:isConstituentOf" ];
	"owl:Thing" -> "xsd:dateTime" [ label = "base:hasIntervalDate" ];
	"base:Entity" -> "base:Entity" [ label = "base:isPartOf" ];
	"base:Entity" -> "owl:Thing" [ label = "base:hasConstraint" ];
	"base:Entity" -> "base:Entity" [ label = "base:hasConstituent" ];
	"base:Entity" -> "owl:Thing" [ label = "base:isReferenceOfInformationRealizedBy" ];
	"base:Entity" -> "owl:Thing" [ label = "base:hasDataValue" ];
	"owl:Thing" -> "base:Entity" [ label = "base:isRegionFor" ];
	"base:Entity" -> "base:Entity" [ label = "base:nearTo" ];
	"base:Entity" -> "owl:Thing" [ label = "base:isObservableAt" ];
	"base:Entity" -> "base:Entity" [ label = "base:hasLocation" ];
	"base:Entity" -> "owl:Thing" [ label = "base:hasQuality" ];
	"base:Entity" -> "base:Entity" [ label = "base:directlyPrecedes" ];
	"base:Entity" -> "base:Entity" [ label = "base:hasCommonBoundary" ];
	"base:Entity" -> "base:Entity" [ label = "base:isLocationOf" ];
	"base:Entity" -> "base:Entity" [ label = "base:associatedWith" ];
	"owl:Thing" -> "base:Entity" [ label = "base:isConstraintFor" ];
	"base:Entity" -> "owl:Thing" [ label = "base:isDescribedBy" ];
	"base:Entity" -> "base:Entity" [ label = "base:farFrom" ];
	"owl:Thing" -> "base:Entity" [ label = "base:isSettingFor" ];
	"base:Entity" -> "owl:Thing" [ label = "base:isClassifiedBy" ];
	"base:Entity" -> "base:Entity" [ label = "base:directlyFollows" ];
	"base:Entity" -> "owl:Thing" [ label = "base:isReferenceOf" ];
	"base:Entity" -> "base:Entity" [ label = "base:isComponentOf" ];
	"base:Entity" -> "base:Entity" [ label = "base:hasComponent" ];
	"base:Entity" -> "owl:Thing" [ label = "base:hasRegion" ];
	"owl:Thing" -> "base:Entity" [ label = "base:isQualityOf" ];
	"base:Entity" -> "base:Entity" [ label = "base:hasPart" ];
	"base:Entity" -> "base:Entity" [ label = "base:overlaps" ];
	"base:Entity" -> "owl:Thing" [ label = "base:hasSetting" ];
	"base:Entity" -> "base:Entity" [ label = "base:sameSettingAs" ];
	"owl:Thing" -> "base:Entity" [ label = "base:isTimeOfObservationOf" ];
	"owl:Thing" -> "base:Entity" [ label = "base:classifies" ];
	"base:Entity" -> "owl:Thing" [ label = "base:isMemberOf" ];

}
